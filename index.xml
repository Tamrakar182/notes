<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://tamrakar182.github.io/quartz/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://tamrakar182.github.io/quartz/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup</title><link>https://tamrakar182.github.io/quartz/notes/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/setup/</guid><description>Making your own Quartz Setting up Quartz requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!</description></item><item><title>Editing Content in Quartz</title><link>https://tamrakar182.github.io/quartz/notes/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/editing/</guid><description>Editing Quartz runs on top of Hugo so all notes are written in Markdown.
Folder Structure Here&amp;rsquo;s a rough overview of what&amp;rsquo;s what.</description></item><item><title>Obsidian Vault Integration</title><link>https://tamrakar182.github.io/quartz/notes/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/obsidian/</guid><description>Setup Obsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.</description></item><item><title>Preview Changes</title><link>https://tamrakar182.github.io/quartz/notes/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your Quartz site looks like before deploying it to the internet, the following instructions guide you through installing the proper dependencies to run it locally.</description></item><item><title>Deploying Quartz to the Web</title><link>https://tamrakar182.github.io/quartz/notes/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/hosting/</guid><description>Hosting on GitHub Pages Quartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go!</description></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Computer-Architecture/Computer-Architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Computer-Architecture/Computer-Architecture/</guid><description/></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Computer-Graphics/Computer-Graphics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Computer-Graphics/Computer-Graphics/</guid><description/></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Asymptotic-notations-and-common-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Asymptotic-notations-and-common-functions/</guid><description/></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Divide-and-Conquer-Sorting-Alogrithms-Quick-Merge-and-Heap-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Divide-and-Conquer-Sorting-Alogrithms-Quick-Merge-and-Heap-sort/</guid><description/></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Dynamic-memory-allocation-in-C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Dynamic-memory-allocation-in-C/</guid><description/></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Efficiency-of-Sorting-Algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Efficiency-of-Sorting-Algorithms/</guid><description/></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Hashing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Hashing/</guid><description>Hashing</description></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/linked-lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/linked-lists/</guid><description>Linked List Linked List is a data structure &amp;hellip;..
Related: [[Searching]]</description></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Queue-Queue-as-an-ADT-Primitive-Operations-in-Queue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Queue-Queue-as-an-ADT-Primitive-Operations-in-Queue/</guid><description/></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Stack-Stack-as-an-ADT-Stack-Operations-and-Stack-Applications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Stack-Stack-as-an-ADT-Stack-Operations-and-Stack-Applications/</guid><description/></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Numerical-Method/Numerical-Method/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Numerical-Method/Numerical-Method/</guid><description/></item><item><title/><link>https://tamrakar182.github.io/quartz/Third-Semester/Statistics-II/Statistics-II/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Statistics-II/Statistics-II/</guid><description/></item><item><title>Binary Search</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Binary-Search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Binary-Search/</guid><description>Binary Search Binary Search Algorithm is another approach to the Searching where we follow a [[divide and conquer]] approach by dividing the searching space in half and comparing the search term with the middle element until the target element is found.</description></item><item><title>Callouts</title><link>https://tamrakar182.github.io/quartz/notes/callouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/callouts/</guid><description>Callout support Quartz supports the same Admonition-callout syntax as Obsidian.
This includes
12 Distinct callout types (each with several aliases) Collapsable callouts See documentation on supported types and syntax here.</description></item><item><title>Chapter 1 Introduction to Data Structures and Algorithms</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-1-Introduction-to-Data-Structures-and-Algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-1-Introduction-to-Data-Structures-and-Algorithms/</guid><description>Introduction to Data Structures and Algorithms In this chapter, we will learn about:
[[Data types, Data Structures and Abstract Data Type]] [[Dynamic memory allocation in C]] [[Introduction to Algorithms]] [[Asymptotic notations and common functions]]</description></item><item><title>Chapter 2 Stack</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-2-Stack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-2-Stack/</guid><description>Stack In this chapter, we will learn about:
[[Stack, Stack as an ADT, Stack Operations and Stack Applications]] [[Conversion from infix to postfix-prefix expression, Evaluation of postfix-prefix expressions]]</description></item><item><title>Chapter 3 Queue</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-3-Queue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-3-Queue/</guid><description>Queue In this chapter, we will learn about:
[[Queue, Queue as an ADT, Primitive Operations in Queue]] [[Linear Queue, Circular Queue, Priority Queue, Queue Applications]]</description></item><item><title>Chapter 6 Sorting</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-6-Sorting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-6-Sorting/</guid><description>Sorting In this chapter, we will learn about:
[[Introduction and Types of sorting, Internal and External sort]] [[Comparison Sorting Algorithms, Bubble, Selection and Insertion Sort, Shell Sort]] [[Divide and Conquer Sorting Alogrithms, Quick, Merge and Heap sort]] [[Efficiency of Sorting Algorithms]]</description></item><item><title>Chapter 7 Searching and Hashing</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-7-Searching-and-Hashing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-7-Searching-and-Hashing/</guid><description>Searching and Hashing In this chapter, we will learn about:
[[Introduction to Searching and Search Algorithms]] [[Hashing, Hash functions and Hash tables, Collision Resolution Techniques]]</description></item><item><title>Chapter 8 Tress and Graphs</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-8-Tress-and-Graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Chapter-8-Tress-and-Graphs/</guid><description>Trees and Graphs In this chapter, we will learn about:
[[Concept and Definitions, Basic Operations in Binary Tree, Tree Height, Level and Depth]] [[Binary Search Tree, Insertion, Deletion, Traversals, Search in BST]] [[AVL Tree and Balancing Algorithm, Applications of Trees]] [[Definition and Representation of Graphs, Graph Traversal, Minimum Spanning Tree, Kruskal and Prims Algorithm]] [[Shortest Path Algorithms, Dijkstra Algorithm]]</description></item><item><title>CJK + Latex Support (测试)</title><link>https://tamrakar182.github.io/quartz/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</guid><description>Chinese, Japanese, Korean Support 几乎在我们意识到之前，我们已经离开了地面。
우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.
私たちがそれを知るほぼ前に、私たちは地面を離れていました。
Latex Block math works with two dollar signs $$.</description></item><item><title>Concept and Definitions, Basic Operations in Binary Tree, Tree Height, Level and Depth</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Concept-and-Definitions-Basic-Operations-in-Binary-Tree-Tree-Height-Level-and-Depth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Concept-and-Definitions-Basic-Operations-in-Binary-Tree-Tree-Height-Level-and-Depth/</guid><description>Tree, Graph and Binary Tree [[Tree]] [[Graph]] [[Binary Tree]]</description></item><item><title>Configuration</title><link>https://tamrakar182.github.io/quartz/notes/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/config/</guid><description>Configuration Quartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.</description></item><item><title>Course Outline</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Course-Outline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Course-Outline/</guid><description>This is the overall course outline for the third semester of CSIT.
S.N. Course Code Title Credit Hours Full Marks 1 CSC206 [[Third Semester/Data Structures and Algorithms/Data Structures and Algorithms]] 3 100 2 CSC207 [[Third Semester/Numerical Method/Numerical Method]] 3 100 3 CSC208 [[Third Semester/Computer Architecture/Computer Architecture]] 3 100 4 CSC209 [[Third Semester/Computer Graphics/Computer Graphics]] 3 100 5 STA210 [[Third Semester/Statistics II/Statistics II]] 3 100</description></item><item><title>Custom Domain</title><link>https://tamrakar182.github.io/quartz/notes/custom-Domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/custom-Domain/</guid><description>Registrar This step is only applicable if you are using a custom domain! If you are using a &amp;lt;YOUR-USERNAME&amp;gt;.github.io domain, you can skip this step.</description></item><item><title>Data Structure</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Data-Structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Data-Structure/</guid><description>Data Structure A Data Structure is a specialized format for organizing, processing, retrieving and storing data. It is a way of organizing data so that it can be accessed and used efficiently.</description></item><item><title>Data Structures and Algorithms</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Data-Structures-and-Algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Data-Structures-and-Algorithms/</guid><description>Data Structures and Algorithms Tags: #dsa #essential
DSA or Data Structures and Algorithm covers concepts of [[stack]], [[queue]], [[linked lists]], [[tree]] and [[graph]] along with ideas of [[sorting]] and [[searching]].</description></item><item><title>Data types, Data Structures and Abstract Data Type</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Data-types-Data-Structures-and-Abstract-Data-Type/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Data-types-Data-Structures-and-Abstract-Data-Type/</guid><description>Data Types, Data Structures and Abstract Data Type [[Data Types in C]] [[Data Structure]] [[Abstract Data Type]]</description></item><item><title>Hashing, Hash functions and Hash tables, Collision Resolution Techniques</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Hashing-Hash-functions-and-Hash-tables-Collision-Resolution-Techniques/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Hashing-Hash-functions-and-Hash-tables-Collision-Resolution-Techniques/</guid><description>Hashing, Hash Functions and Hash Tables, Collision Resolution Techniques [[Hashing]] [[Hash Functions]] [[Hash Tables]] [[Hash Collision and Resolution Techniques]]</description></item><item><title>Hosting with Docker</title><link>https://tamrakar182.github.io/quartz/notes/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/docker/</guid><description>If you want to host Quartz on a machine without using a webpage hosting service, it may be easier to install Docker Compose and follow the instructions below than to install Quartz&amp;rsquo;s dependencies manually.</description></item><item><title>Ignoring Notes</title><link>https://tamrakar182.github.io/quartz/notes/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/ignore-notes/</guid><description>Quartz Ignore Edit ignoreFiles in config.toml to include paths you&amp;rsquo;d like to exclude from being rendered.
1 2 3 4 5 6 .</description></item><item><title>Introduction to Searching and Search Algorithms</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Introduction-to-Searching-and-Search-Algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Introduction-to-Searching-and-Search-Algorithms/</guid><description>Searching and Search Algorithms [[Searching]] [[Search Algorithms]]</description></item><item><title>Linear Data Structure</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Linear-Data-Structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Linear-Data-Structure/</guid><description>Linear Data Structure A linear Data Structure is any organization of data where the elements are orders in a sequence and are not in any hierarchy.</description></item><item><title>Linear Search</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Linear-Search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Linear-Search/</guid><description>Sequential/Linear Search Linear Search Algorithm is a rather simple algorithm that starts at one end of the list and goes through the entire list until the desired element is found, otherwise the search continues until the end of the data set.</description></item><item><title>nodes</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/nodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/nodes/</guid><description>Node A node is a simple data item or value where it is an individual part of a larger [[Data Structure]].</description></item><item><title>Non-Linear Data Structure</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Non-Linear-Data-Structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Non-Linear-Data-Structure/</guid><description>Non-Linear Data Structure A non-linear Data Structure is any organization of data where the elements are orders in a hierarchical order.</description></item><item><title>Quartz Philosophy</title><link>https://tamrakar182.github.io/quartz/notes/philosophy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/philosophy/</guid><description>“[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.</description></item><item><title>Search</title><link>https://tamrakar182.github.io/quartz/notes/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/search/</guid><description>Quartz supports two modes of searching through content.
Full-text Full-text search is the default in Quartz. It produces results that exactly match the search query.</description></item><item><title>Search Algorithms</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Search-Algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Search-Algorithms/</guid><description>Search Algorithm A search Algorithm is any algorithm which can search through any given organization of items to find the given item</description></item><item><title>Searching</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Searching/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Searching/</guid><description>Searching Searching in data structures is to find the required information in a collection of items stored as elements in the computer memory.</description></item><item><title>Showcase</title><link>https://tamrakar182.github.io/quartz/notes/showcase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/showcase/</guid><description>Want to see what Quartz can do? Here are some cool community gardens :)
Quartz Documentation (this site!) Jacky Zhao&amp;rsquo;s Garden Scaling Synthesis - A hypertext research notebook AWAGMI Intern Notes Shihyu&amp;rsquo;s PKM SlRvb&amp;rsquo;s Site Course notes for Information Technology Advanced Theory Brandon Boswell&amp;rsquo;s Garden Siyang&amp;rsquo;s Courtyard Data Dictionary 🧠 sspaeti.</description></item><item><title>Tree</title><link>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/Third-Semester/Data-Structures-and-Algorithms/Tree/</guid><description>Tree Tree in data structures is a [[Non-Linear Data Structure]] that has a hierarchical collection of [[nodes]].
Root Node The very top-most node of any tree is referred to as being it&amp;rsquo;s root node.</description></item><item><title>Troubleshooting and FAQ</title><link>https://tamrakar182.github.io/quartz/notes/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/troubleshooting/</guid><description>Still having trouble? Here are a list of common questions and problems people encounter when installing Quartz.
While you&amp;rsquo;re here, join our Discord :)</description></item><item><title>Updating</title><link>https://tamrakar182.github.io/quartz/notes/updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tamrakar182.github.io/quartz/notes/updating/</guid><description>Haven&amp;rsquo;t updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update!</description></item></channel></rss>